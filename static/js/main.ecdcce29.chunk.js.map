{"version":3,"sources":["Components/Header/Header.js","Components/Intro/Intro.js","Components/Step1/Step1.js","Components/Step2/Step2.js","Components/Step3/Step3.js","Components/Step4/Step4.js","Components/Controls/UpButton.js","Components/Controls/DownButton.js","Components/Controls/Controls.js","App.js","serviceWorker.js","index.js","Components/Header/git.png"],"names":["Header","props","react_default","a","createElement","style","boxShadow","backgroundColor","color","className","width","height","lineHeight","animate","password","href","src","Icon","alt","Intro","cssClass","transition","marginTop","zIndex","padding","textIndent","Step1","Step2","Step3","paddingTop","Step4","UpButton","onClick","clicked","disabled","fa","DownButton","Controls","position","marginLeft","Controls_UpButton","upClick","upDisabled","Controls_DownButton","downClick","downDisabled","App","state","passText","paneClass","upBtnDisabled","downBtnDisabled","handleButtonDown","_this","setState","setTimeout","handleButtonUp","Components_Header_Header","this","Components_Controls_Controls","Components_Intro_Intro","Components_Step1_Step1","Components_Step2_Step2","Components_Step3_Step3","Components_Step4_Step4","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ecdcce29.chunk.js","sourcesContent":["import React from 'react';\r\nimport Icon from './git.png';\r\nimport './Header.css';\r\n\t\r\nlet Header = props => {\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\t\tboxShadow: '0px 0px 2px 1px black',\r\n\t\t\t\tbackgroundColor:'#5F4A62',\r\n\t\t\t\tcolor:'white'}}\r\n\t\t\t\tclassName='container-fluid fixed-top'>\r\n\t\t\t<div className='p-1 row'>\r\n\t\t\t\t<h1 className='font-weight-bold col-4 mt-2'> Password Anatomy </h1>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\tcolor: 'black', \r\n\t\t\t\t\twidth: '300px',\r\n\t\t\t\t\theight: '40px',\r\n\t\t\t\t\tboxShadow: '0px 0px 2px 1px black'}} className='col-4 m-3 p-0 text-left'>\r\n\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\tlineHeight: '40px'\r\n\t\t\t\t\t\t}} className={props.animate ? 'animate' : ''}>{props.password}<span className='cursor'>|</span></h5>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-2' />\r\n\t\t\t\t<div className='col-1 mt-1'>\r\n\t\t\t\t\t<a href={'https://github.com/maxxdmg/passwordapp'}>\r\n\t\t\t\t\t\t<img src={Icon} alt={'github'} style={{'width': '64px', 'height': '64px'}} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nlet Intro = props => {\r\n    let cssClass = 'container p-0';\r\n    if (props.transition)\r\n    \tcssClass += ' ' + props.transition;\r\n    return (\r\n        <div style={{ backgroundColor: '#CE3B44', marginTop: '120px',zIndex: '5'}}\r\n            className={cssClass}>\r\n            <div className='text-left p-3'>\r\n                <h2 className='font-weight-bold'> Anatomy of a Password! </h2>\r\n            </div>\r\n            <div className='w-100' />\r\n            <div style={{ backgroundColor: '#E64B50', width: '100%', padding: '2px', height: '500px'}} >\r\n                <p style={{'textIndent': '40px'}} className='p-2 m-0'>The art of Password creation becomes more and more critical as society \r\n                \tis increasingly digitized. The consequences of lacking good password pratices are become more dire as the average\r\n                \tperson lives more of their life online. The goal of this site is to explain some good password practices that the average user can take advantage of and go into where they come from. Readers will not only know the standards of good password practice but also have the innerworkings\r\n                \tof password cracking demystified. This site is not a lecture but a walkthrough of the \r\n                \tanatomy of a password!\r\n                </p>\r\n\r\n                <p style={{'textIndent': '40px'}} className='p-2 m-0'>Take a look at the 'password' box\r\n                at the top of the site. Although it may be hidden currently, moving to the next section via the\r\n                down button will reveal a very insecure password. After each password practice is discussed the box will change \r\n                to reflect the topic covered. Watch as the example password blooms from insecurity to competency!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Intro;","import React from 'react';\r\n\r\nlet Step1 = props => {\r\n    let cssClass = 'container p-0';\r\n    if (props.transition)\r\n        cssClass += ' ' + props.transition;\r\n    return (\r\n        <div style={{ backgroundColor: '#EC9717FF', marginTop: '50px',zIndex: '5'}}\r\n            className={cssClass}>\r\n            <div className='text-left p-3'>\r\n                <h2 className='font-weight-bold'> Longer Passwords & Brute Forcing  </h2>\r\n            </div>\r\n            <div className='w-100' />\r\n            <div style={{ backgroundColor: '#EFAA42FF', width: '100%', padding: '2px', height: '500px' }} >\r\n                 <p style={{'textIndent': '40px'}} className='p-2 m-0'>The length of a password is the most crucial\r\n                 aspect of it's strength. This is due to the fundamental nature of how password cracking works. \r\n                 Password cracking is the act of guessing passwords until the correct one is found. Also known as\r\n                 brute forcing passwords, all tools and methods for cracking is built upon the idea of brute force.\r\n                 How the length of a password deters cracking is very simple. The time taken to guess a password\r\n                 gets exponentially larger the longer a password is. For a complex password the amount of time needed\r\n                 to guess a password with basic brute forcing is unreasonably long. For example, the time it takes to \r\n                 crack (which is just simply guessing) the 7 character long password 'abcdefg' is 0.29 millseconds \r\n                 as of 2015. That is pretty quick, by changing the password from the seven character long 'abcdefg'\r\n                 to the 12 character long 'abcdefghijkl' the time to crack is increased to 2 centuries. That is a \r\n                 giant jump for an added 5 extra characters which shows how impactful the length of a password \r\n                 truly is.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step1;","import React from 'react';\r\n\r\nlet Step2 = props => {\r\n    let cssClass = 'container p-0';\r\n    if (props.transition)\r\n        cssClass += ' ' + props.transition;\r\n    return (\r\n        <div style={{ backgroundColor: '#72AE5F', marginTop: '50px', zIndex: 5}}\r\n            className={cssClass}>\r\n            <div className='text-left p-3'>\r\n                <h2 className='font-weight-bold'> Common Phrases, Random Words & Dictionary Attacks </h2>\r\n            </div>\r\n            <div className='w-100' />\r\n            <div style={{ backgroundColor: '#72D75F', width: '100%', padding: '2px', height: '500px' }} >\r\n                 <p style={{'textIndent': '40px'}} className='p-2 m-0'>A common method for creating long passwords is to use a common phrase or\r\n                  a string of related words, such as \"ThisIsMyPassword\" or \"GreenTreeOutsideGround\".  While long passwords like these are resitant\r\n                  to traditional brute force attacks, they are still vulnerable to a form of brute force attack known as a dictionary attack.   \r\n                  A dictionary attack is a form of password cracking that checks for commonly used passwords or strings of related words.  \r\n                  The attacker has a list of related words and common passwords (known as a dictionary) and checks combinations until the correct password is found.  \r\n                  Passwords such as “ThisIsMyPassword” are not recommended because they are commonly used and are likely to be included in an attacker's dictionary.\r\n                  Also, passwords such as \"GreenTreeOutsideGround\" are not recommended because they contain realted words which can be successfully guessed using a dictionary attack.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step2;","import React from 'react';\r\n\r\nlet Step3 = props => {\r\n    let cssClass = 'container p-0';\r\n    if (props.transition)\r\n        cssClass += ' ' + props.transition;\r\n    return (\r\n        <div style={{ backgroundColor: '#1C7AD8', marginTop: '50px', zIndex: 5}}\r\n            className={cssClass}>\r\n            <div className='text-left p-3'>\r\n                <h2 className='font-weight-bold'>Substitutions & Alternate Spellings</h2>\r\n            </div>\r\n            <div className='w-100' />\r\n            <div style={{ backgroundColor: '#4A9BE7', width: '100%', padding: '3px', paddingTop: '12px', height: '500px' }} >\r\n                <p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n                    A common error when trying to create a secure password is simply replacing certain letters in the\r\n                    password with numbers or symbols that look similar.  For example, one might change \"ThisIsMyPassword\"\r\n                    to \"ThisIsMyPa55word\".  However, these passwords are not secure because many dictionary attacks also\r\n                    check for these types of substitutions.\r\n                </p>\r\n                <p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n                    Another common error is to intentionally misspell or abbreviate a word.\r\n                    For example, one might change the word “Quick” in their password to “Kwik”.  However, dictionary attacks\r\n                    often check for these variations, so simply changing the spelling of a word is not enough to create a secure\r\n                    password.  Furthermore, substituting letters or misspelling words can make a password difficult to remember,\r\n                    so it is not a recommended practice.           \r\n                </p>\r\n\t\t\t\t<p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n\t\t\t\t\tThese types of changes don't add a meaninful security to your password, while making it harder to remember. Having passwords that utilize these techniques aren't weaker than ones that don't, but you use them at your own inconvenience.\r\n\t\t\t\t</p>]\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step3;","import React from 'react';\r\n\r\nlet Step4 = props => {\r\n    let cssClass = 'container p-0';\r\n    if (props.transition)\r\n        cssClass += ' ' + props.transition;\r\n    return (\r\n        <div style={{ backgroundColor: '#BF2DC7', marginTop: '50px', zIndex: '5'}}\r\n            className={cssClass}>\r\n            <div className='text-left p-3'>\r\n                <h2 className='font-weight-bold'>Strong Passwords</h2>\r\n            </div>\r\n            <div className='w-100' />\r\n            <div style={{ backgroundColor: '#D361DB', width: '100%', padding: '3px', paddingTop: '12px', height: '500px' }} >\r\n                <p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n                    The most secure passwords take into account all of the practices discussed on this website, making them resistant to various forms\r\n                    of password cracking while also being easy for the user to remember.\r\n                    </p>\r\n                <ul className='p-4 m-0'>\r\n                    <li style={{ 'textIndent': '20px' }} > They are long, which makes them resistant to traditional brute force attacks.</li>\r\n                    <li style={{ 'textIndent': '20px' }} > They don't consist of common phrases or strings of related words, making them resistant to dictionary attacks.</li>\r\n                    <li style={{ 'textIndent': '20px' }} > They also don't use common substitiutions or alternate spellings,\r\n                        making them resistant to attacks which check for these minor variations.</li>\r\n                </ul>\r\n                <p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n                    An example of a secure password which employs all of these practices is \"viralcoralpass\".  This password is\r\n                    resistant to dictionary attacks because it consists of random, unrelated words.  It is also resistiant to traditional brute force\r\n                    attacks because of its length.  A 25 character password such as this would take roughly 228 quintillion years to crack using brute\r\n                    force on a modern desktop PC.\r\n                    </p>\r\n                <p style={{ 'textIndent': '40px' }} className='p-2 m-0'>\r\n                    For those wanting additional security, passwords can be made even stronger by adding numbers and symbols. This forces an attacker to check the entire character\r\n                    space when trying to guess your password.  The above password only contains letters, meaning there are only 52 possible choices \r\n                    that need to be checked for each character in the password.  Adding numbers and symbols raises the number of possible choices to \r\n                    95, making the password even more difficult to crack!\r\n                    </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step4;","import React from 'react';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\n\r\nconst UpButton = props => {\r\n\treturn (\r\n    \t<button \r\n        \tclassName='col-12 btn btn-outline-dark' \r\n        \tstyle={{'backgroundColor': '#5F4A62'}}\r\n        \tonClick={props.clicked} \r\n        \tdisabled={props.disabled} >\r\n            <FaArrowUp />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default UpButton;","import React from 'react';\r\nimport { FaArrowDown } from 'react-icons/fa';\r\n\r\nconst DownButton = props => {\r\n    return (\r\n    \t<button \r\n        \tclassName='col-12 btn btn-outline-dark' \r\n        \tstyle={{'backgroundColor': '#5F4A62'}}\r\n        \tonClick={props.clicked} \r\n        \tdisabled={props.disabled} >\r\n            <FaArrowDown />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DownButton;","import React from 'react';\r\nimport UpButton from './UpButton.js';\r\nimport DownButton from './DownButton.js';\r\n\r\nconst Controls = props => {\r\n    return (\r\n        <div className={'row'} style={{ marginTop: '50px', backgroundColor: 'transparent', padding: '20px',\r\n        position: 'fixed', width: '100px',\r\n        height: '150px', marginLeft: '0px', zIndex: '10' }}>\r\n            <UpButton \r\n                clicked={props.upClick}\r\n                disabled={props.upDisabled} \r\n                 />\r\n            <div className='w-100' />\r\n            <DownButton \r\n            \tclicked={props.downClick} \r\n                disabled={props.downDisabled} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Header from './Components/Header/Header.js';\r\nimport Intro from './Components/Intro/Intro.js';\r\nimport Step1 from './Components/Step1/Step1.js';\r\nimport Step2 from './Components/Step2/Step2.js';\r\nimport Step3 from './Components/Step3/Step3.js';\r\nimport Step4 from './Components/Step4/Step4.js';\r\nimport Controls from './Components/Controls/Controls.js';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    passText: '********',\r\n    paneClass: '',\r\n    upBtnDisabled: true,\r\n    downBtnDisabled: false,\r\n    animate: false\r\n  };\r\n\r\n\r\n  handleButtonDown = () => {\r\n    const currClass = this.state.paneClass;\r\n    switch (currClass) {\r\n      case 'transitionPane1':\r\n        this.setState({\r\n          paneClass: 'transitionPane2', \r\n          passText: 'thisismypassword',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      case 'transitionPane2':\r\n        this.setState({\r\n          paneClass: 'transitionPane3', \r\n          passText: 'viralcoralpass',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      case 'transitionPane3':\r\n        this.setState({\r\n          paneClass: 'transitionPane4', \r\n          passText: '2viral_coralpass35',\r\n          downBtnDisabled: true,\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      case 'transitionPane4':\r\n        break;\r\n\r\n      default:\r\n        this.setState({\r\n          paneClass: 'transitionPane1', \r\n          upBtnDisabled: false,\r\n          passText: 'password',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  handleButtonUp = () => {\r\n    const currClass = this.state.paneClass;\r\n    switch (currClass) {\r\n      case '':\r\n        break;\r\n\r\n      case 'transitionPane2':\r\n        this.setState({\r\n          paneClass: 'transitionPane1', \r\n          passText: 'password',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      case 'transitionPane3':\r\n        this.setState({\r\n          paneClass: 'transitionPane2', \r\n          passText: 'thisismypassword',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      case 'transitionPane4':\r\n        this.setState({\r\n          paneClass: 'transitionPane3', \r\n          passText: 'viralcoralpass', \r\n          downBtnDisabled: false,\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n\r\n      default:\r\n        this.setState({\r\n          paneClass: 'transitionPane0',\r\n          upBtnDisabled: true,\r\n          passText: '********',\r\n          animate: true}, () => {\r\n            setTimeout(() => {\r\n              this.setState({animate: false})\r\n                  }, 600);\r\n          });\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header password={this.state.passText} animate={this.state.animate} />\r\n        <Controls\r\n            downDisabled={this.state.downBtnDisabled}\r\n            upDisabled={this.state.upBtnDisabled}\r\n            downClick={this.handleButtonDown}\r\n            upClick={this.handleButtonUp} />\r\n        <Intro transition={this.state.paneClass}/>\r\n        <Step1 transition={this.state.paneClass}/>\r\n        <Step2 transition={this.state.paneClass}/>\r\n        <Step3 transition={this.state.paneClass}/>\r\n        <Step4 transition={this.state.paneClass}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/git.9ce68bca.png\";"],"sourceRoot":""}